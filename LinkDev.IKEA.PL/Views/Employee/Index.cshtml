@using LinkDev.IKEA.PL.ViewModels.Employees
@model EmployeeListViewModel 
@{
	ViewData["Title"] = "Employees";
}


<div class="container-fluid">
    <h1>Employees</h1>

    <div class="row mb-3">
        <div class="col-md-6">
            <a asp-action="Create" class="btn btn-primary">Create New Employee</a>
        </div>
        <div class="col-md-6">
            <form asp-action="Index" method="get" class="form-inline float-right">
                <div class="input-group">
                    <input type="text" asp-for="SearchTerm" class="form-control" placeholder="Search employees...">
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-outline-secondary">Search</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortBy="name">
                            Full Name
                          @*   @if (Model.SortBy == "name")
                            {
                                <i class="fas fa-sort-@(Model.SortAscending ? "up" : "down")"></i>
                            } *@
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortBy="email" >
                            Email
                          @*   @if (Model.SortBy == "email")
                            {
                                <i class="fas fa-sort-@(Model.SortAscending ? "up" : "down")"></i>
                            } *@
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortBy="department" >
                            Department
                          @*   @if (Model.SortBy == "department")
                            {
                                <i class="fas fa-sort-@(Model.SortAscending ? "up" : "down")"></i>
                            } *@
                        </a>
                    </th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Employees)
                {
                    <tr>
                        <td>@item.FullName</td>
                        <td>@item.Email</td>
                        <td>@item.DepartmentName</td>
                        <td>
                            @if (item.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">
                                    <i class="fas fa-info-circle"></i> Details
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                </div>
                           </td>
                        <td>
                            <button class="btn btn-danger btn-sm " id="delete-btn" data-id="@item.Id" data-name="@item.FullName">
                                    <i class="fa-solid fa-trash"></i>Delete
                                </button>
                        </td>
                        
                       
                    </tr>
                 
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @{
        var prevDisabled = Model.Page == 1 ? "disabled" : ""; var nextDisabled = Model.Page * Model.PageSize >= Model.TotalCount ? "disabled" : ""; var totalPages = (int)Math.Ceiling(Model.TotalCount / (double)Model.PageSize);
    }

    <div class="d-flex justify-content-between align-items-center">
        <div>
            Showing @(((Model.Page - 1) * Model.PageSize) + 1) to @Math.Min(Model.Page * Model.PageSize, Model.TotalCount) of @Model.TotalCount employees
        </div>

        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-pageSize="@Model.PageSize" >
                        Previous
                    </a>
                </li>

                @for (int i = Math.Max(1, Model.Page - 2); i<= Math.Min(totalPages, Model.Page + 2); i++)
                {
                    <li class="page-item @(i == Model.Page ? " active " : " ")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item @nextDisabled">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-pageSize="@Model.PageSize" >
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>
@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="liveToast" class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">IKEA</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<input type="hidden" name="__RequestVerificationToken" value="fake-token-for-demo" />


<script>
    $(document).ready(function () {
        $(document).on('click', '#delete-btn', function (e) {
            e.preventDefault();

            var id = $(this).data('id');
            var name = $(this).data('name');

            Swal.fire({
                title: 'Confirm Delete',
                html: 'Are you sure you want to delete <strong>' + name + '</strong>?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    var token = $('input[name="__RequestVerificationToken"]').val();

                    var form = $('<form></form>').attr({
                        method: 'post',
                        action: '/Employee/Delete/' + id
                    });

                    form.append($('<input>').attr({
                        type: 'hidden',
                        name: '__RequestVerificationToken',
                        value: token
                    }));

                    $('body').append(form);
                    form.submit();
                }
            });
        });
    });
</script>
